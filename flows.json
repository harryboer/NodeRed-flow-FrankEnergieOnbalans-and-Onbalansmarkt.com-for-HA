[{"id":"729b83fa65ec0269","type":"tab","label":"FrankEnergie Onbalans","disabled":false,"info":"","env":[]},{"id":"c2cf6af49d25e0e7","type":"inject","z":"729b83fa65ec0269","name":"Every 5 minutes","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":40,"wires":[["16e3922559fdee4b"]]},{"id":"c3617a2f605e88d5","type":"debug","z":"729b83fa65ec0269","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1320,"y":640,"wires":[]},{"id":"5439af26c7b9db6d","type":"debug","z":"729b83fa65ec0269","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":100,"wires":[]},{"id":"1a8ce57395db7edf","type":"function","z":"729b83fa65ec0269","name":"Prepare Login Request","func":"const credentials = global.get(\"frankCredentials\");\n\nif (!credentials || !credentials.username || !credentials.password) {\n    node.error(\"FrankEnergie credentials are missing.\");\n    return null;\n}\n\n// Prepare login payload\nmsg.payload = {\n    query: `\n        mutation Login($email: String!, $password: String!) {\n            login(email: $email, password: $password) {\n                authToken\n                refreshToken\n            }\n        }\n    `,\n    variables: {\n        email: credentials.username,\n        password: credentials.password\n    },\n    operationName: \"Login\"\n};\n\nmsg.url = \"https://frank-graphql-prod.graphcdn.app/\";\nmsg.method = \"POST\";\nmsg.headers = {\n    \"Content-Type\": \"application/json\"\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":160,"y":140,"wires":[["7593a1bac22db0fc"]]},{"id":"b0e767dacb2dc563","type":"function","z":"729b83fa65ec0269","name":"Handle Login Response","func":"// \"Handle Login Response\"\n\nconst data = msg.payload; \n// data.data.login should have {authToken, refreshToken} if successful\n\nif (!data.data || !data.data.login) {\n    node.error(\"Login failed or returned empty data\");\n    return;\n}\n\n// Extract the tokens\nconst authToken = data.data.login.authToken;\nconst refreshToken = data.data.login.refreshToken;\n\n// Store them in flow context for local use\nflow.set(\"frankAuthToken\", authToken);\nflow.set(\"frankRefreshToken\", refreshToken);\n\n// Store the authToken in global context for universal access\nglobal.set(\"authToken\", authToken); // Now accessible globally\n\n// Pass msg along if needed\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":260,"wires":[["36067175b2ed71ef"]]},{"id":"36067175b2ed71ef","type":"function","z":"729b83fa65ec0269","name":"Prepare getSmartBatteries Request","func":"// Node-RED Function node: \"Prepare getSmartBatteries Request\"\n\n// Retrieve the stored auth token from flow context\nconst authToken = flow.get(\"frankAuthToken\");\nif (!authToken) {\n    node.error(\"No auth token found. Did you login first?\");\n    return;\n}\n\n// Build the GraphQL query for retrieving smart batteries\nmsg.payload = {\n    query: `\n        query SmartBatteries {\n            smartBatteries {\n                brand\n                capacity\n                createdAt\n                externalReference\n                id\n                maxChargePower\n                maxDischargePower\n                provider\n                updatedAt\n            }\n        }\n    `,\n    operationName: \"SmartBatteries\"\n};\n\n// Prepare the request details for the HTTP Request node\nmsg.url = \"https://frank-graphql-prod.graphcdn.app/\";    // GraphQL endpoint\nmsg.method = \"POST\";\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Bearer ${authToken}`  // Add the token for authorization\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":360,"wires":[["d1b4604911316b3a"]]},{"id":"7593a1bac22db0fc","type":"http request","z":"729b83fa65ec0269","name":"Login Request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":140,"y":200,"wires":[["b0e767dacb2dc563"]]},{"id":"d1b4604911316b3a","type":"http request","z":"729b83fa65ec0269","name":"SmartBatteries request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":170,"y":420,"wires":[["87a1a57f1e9606e5"]]},{"id":"87a1a57f1e9606e5","type":"function","z":"729b83fa65ec0269","name":"Handle SmartBatteries Response","func":"// Node-RED Function Node: \"Handle SmartBatteries Response\"\n\n// Extract the array of batteries from msg.payload\nconst batteries = msg.payload;\n\nif (!batteries || batteries.length === 0) {\n    node.error(\"No smart batteries found.\");\n    return;\n}\n\n// Log the batteries for debugging\nnode.warn(\"Smart Batteries: \" + JSON.stringify(batteries));\n\n// Pass the array of batteries to the next step\nmsg.payload = batteries;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":200,"y":480,"wires":[["9966b5499a3053d5","e26cce67b02d3495"]]},{"id":"6f2214c1c93fc2f2","type":"debug","z":"729b83fa65ec0269","name":"debug 5","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1320,"y":700,"wires":[]},{"id":"183645fbb5fcc4c2","type":"debug","z":"729b83fa65ec0269","name":"debug 6","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1320,"y":560,"wires":[]},{"id":"86f5faefc2e2bccb","type":"function","z":"729b83fa65ec0269","name":"Prepare Get SmartBatterySessions Request","func":"// Assuming the authentication token is stored in the global context\nconst authToken = global.get(\"authToken\");\n\n// Check if the token exists\nif (!authToken) {\n    node.error(\"Authentication token is missing. Ensure the login flow has been executed.\");\n    return;\n}\n\n// Set the request details\nmsg.url = \"https://frank-graphql-prod.graphcdn.app/\";\nmsg.method = \"POST\";\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Bearer ${authToken}`\n};\n\n// Define the time range for the session query\nconst timeZone = \"Europe/Amsterdam\";\nconst formatDate = (date) =>\n    new Date(date.toLocaleString(\"en-US\", { timeZone })).toISOString().split(\"T\")[0];\n\nconst startDate = formatDate(new Date());\nconst endDate = formatDate(new Date());\n\n// Build the GraphQL query\nmsg.payload = {\n    query: `\n        query SmartBatterySessions($startDate: String!, $endDate: String!, $deviceId: String!) {\n            smartBatterySessions(\n                startDate: $startDate\n                endDate: $endDate\n                deviceId: $deviceId\n            ) {\n                deviceId\n                periodEndDate\n                periodStartDate\n                periodTradingResult\n                totalTradingResult\n            }\n        }\n    `,\n    variables: {\n        deviceId: msg.payload.id, // Extract the deviceId from the split message payload\n        startDate: startDate,\n        endDate: endDate\n    },\n    operationName: \"SmartBatterySessions\"\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":230,"y":760,"wires":[["b835daf2719fa602","fc7b4231d2679b6d"]]},{"id":"b835daf2719fa602","type":"http request","z":"729b83fa65ec0269","name":"SmartBatterySession request","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":180,"y":820,"wires":[["9d5bb5382ba725f1","b9b9092b8088a0c1"]]},{"id":"9d5bb5382ba725f1","type":"function","z":"729b83fa65ec0269","name":"Handle SmartBatterySessions Response","func":"// Extract response data\nconst data = msg.payload;\n\n// Validate the response structure\nif (!data || !data.data || !data.data.smartBatterySessions) {\n    node.error(\"No valid session data found for the battery.\");\n    return;\n}\n\n// Extract session data\nconst sessions = data.data.smartBatterySessions;\n\n// Construct the new payload\nmsg.payload = {\n    session: {\n        deviceId: sessions.deviceId,\n        periodStartDate: sessions.periodStartDate,\n        periodEndDate: sessions.periodEndDate,\n        periodTradingResult: sessions.periodTradingResult,\n        totalTradingResult: sessions.totalTradingResult\n    }\n};\n\n// Use deviceId as the topic for tracking individual batteries\nmsg.topic = `session_${msg.payload.session.deviceId}`;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":220,"y":880,"wires":[["7974f86b1f8d8828","01b075e10992ab1a"]]},{"id":"9966b5499a3053d5","type":"function","z":"729b83fa65ec0269","name":"SmartBatteries array","func":"// Extract smartBatteries array\nmsg.payload = msg.payload.data.smartBatteries;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":160,"y":560,"wires":[["a4dc3c4a4cab0b29","896480afd9cd374e"]]},{"id":"7974f86b1f8d8828","type":"join","z":"729b83fa65ec0269","name":"Join Battery result and HA values","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"5","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1040,"y":560,"wires":[["183645fbb5fcc4c2","b8cfe2595dcfa07c","048946b6a9faca6b"]]},{"id":"e26cce67b02d3495","type":"debug","z":"729b83fa65ec0269","name":"debug 7","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":480,"wires":[]},{"id":"b8cfe2595dcfa07c","type":"function","z":"729b83fa65ec0269","name":"Prepare for Onbalansmarkt.com","func":"// Ensure HA values are present in the message payload\nconst { overallSoC, kWhCharged, kWhDischarged } = msg.payload;\nconst timeZone = \"Europe/Amsterdam\";\nconst localTimestamp = new Date().toLocaleString(\"en-US\", { timeZone });\nconst isoTimestamp = new Date(localTimestamp).toISOString();\n\nif (overallSoC === undefined || kWhCharged === undefined || kWhDischarged === undefined) {\n    node.error(\"Missing required HA values: overallSoC, kWhCharged, or kWhDischarged.\");\n    return null;\n}\n\n// Aggregate the total trading results\nconst totalTradingResult = Object.values(msg.payload)\n    .filter(key => key.session && key.session.totalTradingResult !== undefined)\n    .reduce((sum, key) => sum + key.session.totalTradingResult, 0);\n\nconst periodTradingResult = Object.values(msg.payload)\n    .filter(key => key.session && key.session.periodTradingResult !== undefined)\n    .reduce((sum, key) => sum + key.session.periodTradingResult, 0);\n\n// Prepare the payload for Onbalansmarkt.com\nconst payload = {\n    timestamp: isoTimestamp,\n    batteryResult: periodTradingResult.toFixed(2), // Ensure two decimal places as a string\n    batteryResultTotal: totalTradingResult.toFixed(2), // Ensure two decimal places as a string\n    batteryCharge: Math.round(overallSoC), // Convert SoC to an integer\n    batteryPower: null, \n    chargedToday: Math.round(kWhCharged).toString(), // String format\n    dischargedToday: Math.round(kWhDischarged).toString(), // String format\n    loadBalancingActive: null,\n    solarResult: null, \n    chargerResult: null, \n    selfConsumptionMode: null \n};\n\n// Set headers for the HTTP request\nconst apiKey = global.get(\"onbalansmarktApiKey\");\nif (!apiKey) {\n    node.error(\"Onbalansmarkt API key is missing.\");\n    return null;\n}\n\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Bearer ${apiKey}`\n};\n\n// Set the payload and URL for the HTTP request\nmsg.payload = payload;\nmsg.url = \"https://onbalansmarkt.com/api/live\";\nmsg.method = \"POST\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1030,"y":640,"wires":[["3ae24442bf4902c5","c3617a2f605e88d5"]]},{"id":"3ae24442bf4902c5","type":"http request","z":"729b83fa65ec0269","name":"Send data to Onbalansmarkt.com","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":1040,"y":700,"wires":[["6f2214c1c93fc2f2"]]},{"id":"0dad7ef80e367bb9","type":"ha-get-entities","z":"729b83fa65ec0269","name":"SoC Combined","server":"1fb80db3.b43d62","version":1,"rules":[{"condition":"state_object","property":"entity_id","logic":"is","value":"sensor.sessy_laadstatus","valueType":"str"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":600,"y":40,"wires":[["faacc8341008b169"]]},{"id":"ac3211c5cdda3a9f","type":"ha-get-entities","z":"729b83fa65ec0269","name":"Daily kWh Charged","server":"1fb80db3.b43d62","version":1,"rules":[{"condition":"state_object","property":"entity_id","logic":"is","value":"sensor.sessy_charged_kwh_per_dag","valueType":"str"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":610,"y":180,"wires":[["420fee471baa32c2"]]},{"id":"b457c42b333d5ab9","type":"ha-get-entities","z":"729b83fa65ec0269","name":"Daily kWh Discharged","server":"1fb80db3.b43d62","version":1,"rules":[{"condition":"state_object","property":"entity_id","logic":"is","value":"sensor.sessy_discharged_kwh_per_dag","valueType":"str"}],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","outputResultsCount":1,"x":620,"y":320,"wires":[["bbc61ced54ed56b1"]]},{"id":"01b075e10992ab1a","type":"debug","z":"729b83fa65ec0269","name":"debug 8","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":880,"wires":[]},{"id":"b9b9092b8088a0c1","type":"debug","z":"729b83fa65ec0269","name":"debug 9","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":820,"wires":[]},{"id":"fc7b4231d2679b6d","type":"debug","z":"729b83fa65ec0269","name":"debug 10","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":760,"wires":[]},{"id":"420fee471baa32c2","type":"function","z":"729b83fa65ec0269","name":"kWh Charged extract","func":"if (msg.payload && msg.payload[0] && msg.payload[0].state) {\n    msg.payload = parseFloat(msg.payload[0].state); // Convert charged kWh value to a number\n} else {\n    node.error(\"No valid Charged kWh data found.\");\n    return null;\n}\n\nmsg.topic = \"kWhCharged\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":620,"y":240,"wires":[["7974f86b1f8d8828","5fd415328ec9fe60"]]},{"id":"bbc61ced54ed56b1","type":"function","z":"729b83fa65ec0269","name":"kWh Discharged extract","func":"if (msg.payload && msg.payload[0] && msg.payload[0].state) {\n    msg.payload = parseFloat(msg.payload[0].state); // Convert discharged kWh value to a number\n} else {\n    node.error(\"No valid Discharged kWh data found.\");\n    return null;\n}\n\nmsg.topic = \"kWhDischarged\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":380,"wires":[["7974f86b1f8d8828","2be05a77a8198a90"]]},{"id":"5fd415328ec9fe60","type":"debug","z":"729b83fa65ec0269","name":"debug 11","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":180,"wires":[]},{"id":"2be05a77a8198a90","type":"debug","z":"729b83fa65ec0269","name":"debug 12","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":380,"wires":[]},{"id":"faacc8341008b169","type":"function","z":"729b83fa65ec0269","name":"SoC extract","func":"if (msg.payload && msg.payload[0] && msg.payload[0].state) {\n    msg.payload = parseFloat(msg.payload[0].state); // Convert SoC value to a number\n} else {\n    node.error(\"No valid SoC data found.\");\n    return null;\n}\n\nmsg.topic = \"overallSoC\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":100,"wires":[["5439af26c7b9db6d","7974f86b1f8d8828"]]},{"id":"16e3922559fdee4b","type":"function","z":"729b83fa65ec0269","name":"Credentials","func":"// Store the credentials in global context\nglobal.set(\"frankCredentials\", {\n    username: \"name@email.com\", //email registered with FrankEnergie app\n    password: \"frankpassword\" //password used for FrankEnergie app\n});\n\nglobal.set(\"onbalansmarktApiKey\", \"Your_API_token\"); // API token from Onbalansmarkt.com\n\n// Log for debugging purposes\nnode.warn(\"Credentials have been set in global context.\");\n\n// Pass the message along for future use, if necessary\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":40,"wires":[["1a8ce57395db7edf","0dad7ef80e367bb9","ac3211c5cdda3a9f","b457c42b333d5ab9"]]},{"id":"a4dc3c4a4cab0b29","type":"debug","z":"729b83fa65ec0269","name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":560,"wires":[]},{"id":"896480afd9cd374e","type":"split","z":"729b83fa65ec0269","name":"Split Batteries","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":140,"y":640,"wires":[["86f5faefc2e2bccb","976db1bdbb125496"]]},{"id":"976db1bdbb125496","type":"debug","z":"729b83fa65ec0269","name":"debug 14","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":500,"y":640,"wires":[]},{"id":"048946b6a9faca6b","type":"function","z":"729b83fa65ec0269","name":"Extract Sessy Trade Results","func":"// Iterate over each session and create a separate entity for each value\nconst results = [];\nfor (const [key, session] of Object.entries(msg.payload)) {\n    if (session.session) {\n        // Period Trading Result Entity\n        results.push({\n            payload: {\n                entity_id: `sensor.${key}_period_trading_result`,\n                state: parseFloat(session.session.periodTradingResult).toFixed(2),\n            },\n        });\n\n        // Total Trading Result Entity\n        results.push({\n            payload: {\n                entity_id: `sensor.${key}_total_trading_result`,\n                state: parseFloat(session.session.totalTradingResult).toFixed(2),\n            },\n        });\n    }\n}\n\n// Return the list of messages for separate processing\nreturn [results];\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":240,"wires":[["bf42fccb45950e35","36353dac616aa174","587cbb5cca3bd2ab","9d6cce6a508e75e0","64865c9b5e43d3f4","aaf708dd76dccada","49cf6c3fb8d4e018"]]},{"id":"551bbe7f496f45dd","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 1 Trade Results Today","entityConfig":"acf9b707b9ba4b55","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":100,"wires":[[]]},{"id":"bf42fccb45950e35","type":"debug","z":"729b83fa65ec0269","name":"debug 15","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1260,"y":440,"wires":[]},{"id":"36353dac616aa174","type":"switch","z":"729b83fa65ec0269","name":"Sessy1TradingToday","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_period","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1300,"y":100,"wires":[["551bbe7f496f45dd"]]},{"id":"e7745fe68e53581a","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 2 Trade Results Today","entityConfig":"aa08aeca7fd4101b","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":220,"wires":[[]]},{"id":"2c34a2088ff5b787","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 3 Trade Results Today","entityConfig":"7335fb5a46410086","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":340,"wires":[[]]},{"id":"587cbb5cca3bd2ab","type":"switch","z":"729b83fa65ec0269","name":"Sessy1TotalTrading","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_total","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1290,"y":160,"wires":[["eb83bfced859d0c7"]]},{"id":"eb83bfced859d0c7","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 1 Total Trade Results","entityConfig":"a1b9a7bfd1b7077c","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":160,"wires":[[]]},{"id":"9d6cce6a508e75e0","type":"switch","z":"729b83fa65ec0269","name":"Sessy2TradingToday","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_period","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1300,"y":220,"wires":[["e7745fe68e53581a"]]},{"id":"aaf708dd76dccada","type":"switch","z":"729b83fa65ec0269","name":"Sessy3TradingToday","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_period","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1300,"y":340,"wires":[["2c34a2088ff5b787"]]},{"id":"64865c9b5e43d3f4","type":"switch","z":"729b83fa65ec0269","name":"Sessy2TotalTrading","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_total","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1290,"y":280,"wires":[["2fe44404b5e89a1c"]]},{"id":"49cf6c3fb8d4e018","type":"switch","z":"729b83fa65ec0269","name":"Sessy3TotalTrading","property":"payload.entity_id","propertyType":"msg","rules":[{"t":"cont","v":"REPLACE_total","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":1290,"y":400,"wires":[["9005b4a836dcdbff"]]},{"id":"2fe44404b5e89a1c","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 2 Total Trade Results","entityConfig":"ee2eb0e5b08b5f82","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":280,"wires":[[]]},{"id":"9005b4a836dcdbff","type":"ha-sensor","z":"729b83fa65ec0269","name":"Sessy 3 Total Trade Results","entityConfig":"f1f0ce0ccdb9383c","version":0,"state":"payload.state","stateType":"msg","attributes":[{"property":"totalTradingResult","value":"payload.attributes","valueType":"msg"}],"inputOverride":"allow","outputProperties":[],"x":1560,"y":400,"wires":[[]]},{"id":"1fb80db3.b43d62","type":"server","name":"Home Assistant","addon":true},{"id":"acf9b707b9ba4b55","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy1TradingResultsToday","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 1 Trading Results Today"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":true},{"id":"aa08aeca7fd4101b","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy2TradingResultsToday","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 2 Trading Results Today "},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":true},{"id":"7335fb5a46410086","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy3TradingResults ","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 3 Trading Results Today"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":true},{"id":"a1b9a7bfd1b7077c","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy1TotalTradingResults","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 1 Total Trading Results"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee2eb0e5b08b5f82","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy2TotalTradingResults","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 2 Total Trading Results"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"f1f0ce0ccdb9383c","type":"ha-entity-config","server":"1fb80db3.b43d62","deviceConfig":"","name":"Sessy3TotalTrading","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"Sessy 3 Total Trading"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"monetary"},{"property":"unit_of_measurement","value":"EUR"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false}]